class Solution {
public:
    void backtrack(vector<int>& nums, vector<vector<int>>& res, vector<int>& temp, int start) {
        res.push_back(temp);
        for(int i = start; i < nums.size(); i++) {
            if(i > start && nums[i] == nums[i - 1]) {
                continue;
            }
            temp.push_back(nums[i]);
            backtrack(nums, res, temp, i + 1);
            temp.pop_back();
        }
    }
    
    vector<vector<int>> subsetsWithDup(vector<int>& nums) {
        sort(nums.begin(), nums.end());
        vector<vector<int>> res;
        vector<int> temp;
        backtrack(nums, res, temp, 0);
        return res;
    }
};

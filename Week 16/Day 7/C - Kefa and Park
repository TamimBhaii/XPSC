#include <bits/stdc++.h>
using namespace std;

const int Size = 100010;
vector<int> adj[Size];
bool vis[Size];
int n, m, total = 0;
int cc[Size];

void dfs(int s, int sum)
{
    if (vis[s])
        return;
    vis[s] = 1;

    sum = cc[s] ? sum + 1 : 0;

    if (sum > m)
        return;

    if (s != 1 && adj[s].size() == 1)
        total++;

    for (int v : adj[s])
        dfs(v, sum);
}

int main()
{
    ios::sync_with_stdio(false);
    cin.tie(nullptr);
    cin >> n >> m;

    for (int i = 1; i <= n; i++)
        cin >> cc[i];

    for (int i = 0; i < n - 1; i++)
    {
        int u, v;
        cin >> u >> v;
        adj[u].push_back(v);
        adj[v].push_back(u);
    }

    dfs(1, 0);

    cout << total;

    return 0;
}

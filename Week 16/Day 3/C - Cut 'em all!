#include <bits/stdc++.h>
using namespace std;
int main()
{
    ios::sync_with_stdio(false);
    cin.tie(nullptr);

    vector<int> v[100005];
    int vis[100005], p[100005], n, evens = 0;

    memset(vis, 0, sizeof(vis));
    memset(p, -1, sizeof(p));

    function<int(int)> dfs = [&](int u)
    {
        vis[u] = 1;
        int cnt = 1;
        for (int nd : v[u])
        {
            if (nd == p[u])
            {
                continue;
            }
            if (!vis[nd])
            {
                p[nd] = u;
                cnt += dfs(nd);
            }
        }
        vis[u] = 2;
        if (cnt % 2 == 0)
        {
            evens++;
        }
        return cnt;
    };

    cin >> n;
    for (int i = 1, a, b; i < n; i++)
    {
        cin >> a >> b;
        v[a].push_back(b);
        v[b].push_back(a);
    }

    if (n % 2 == 1)
    {
        cout << -1 << endl;
        return 0;
    }

    for (int i = 1; i <= n; i++)
    {
        if (vis[i] == 0)
        {
            dfs(i);
        }
    }

    cout << evens - 1 << endl;
    return 0;
}
